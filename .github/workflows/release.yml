name: Optimized Release Workflow

on:
  push:
    branches:
      - release
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

env:
  COMMITTER_NAME: 'github-actions[bot]'
  COMMITTER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.version.outputs.version }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine version bump
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(BREAKING CHANGE|breaking|major)"
          minor_pattern: "(feat|feature|minor)"
          version_format: "${major}.${minor}.${patch}"
          search_commit_body: true
          bump_each_commit: false
          change_path: "."

      - name: Update extension.toml version
        run: |
          sed -i 's/version = ".*"/version = "${{ steps.version.outputs.version }}"/' extension.toml
          
          # Verify the update
          UPDATED_VERSION=$(grep '^version = ' extension.toml | sed 's/version = "\(.*\)"/\1/')
          if [ "$UPDATED_VERSION" != "${{ steps.version.outputs.version }}" ]; then
            echo "❌ Version update failed"
            exit 1
          fi
          echo "✅ Version updated to ${{ steps.version.outputs.version }}"

      - name: Commit version update
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'ci: updated 1984 theme version to v${{ steps.version.outputs.version }}'
          commit_author: '${{ env.COMMITTER_NAME }} <${{ env.COMMITTER_EMAIL }}>'
          file_pattern: 'extension.toml'
          tagging_message: 'v${{ steps.version.outputs.version }}'

  push:
    name: Publish Extension
    needs: release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: release
          fetch-depth: 0

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.release.outputs.version }}
          name: Release v${{ needs.release.outputs.version }}
          body: |
            # 1984 Theme v${{ needs.release.outputs.version }}

          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Zed Extensions
        id: publish_extension
        uses: huacnlee/zed-extension-action@v1
        with:
          extension-name: 1984-theme
          push-to: chenmijiang/zed-extensions
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
        continue-on-error: true

      - name: Notify completion
        run: |
          echo "::notice::Release workflow completed successfully"
          echo "Extension version: ${{ needs.release.outputs.version }}"
          echo "GitHub release created: https://github.com/${{ github.repository }}/releases/tag/v${{ needs.release.outputs.version }}"
